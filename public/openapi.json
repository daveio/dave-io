{
  "openapi": "3.0.0",
  "info": {
    "title": "Dave.io API",
    "version": "1.0.0",
    "description": "Automatically generated OpenAPI specification from endpoint analysis"
  },
  "servers": [
    {
      "url": "https://dave.io",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token authorization. Include 'Bearer ' prefix."
      }
    },
    "schemas": {
      "AiAltRequestGetSchema": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "URL of the image to analyze"
          }
        },
        "required": ["image"],
        "title": "AI Alt Text GET Request",
        "description": "Request to generate alt text from an image URL"
      },
      "AiAltRequestPostSchema": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image file (multipart form data)"
          }
        },
        "title": "AI Alt Text POST Request",
        "description": "Request to generate alt text from an uploaded image file"
      },
      "AiAltResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "result": {
            "type": "object",
            "properties": {
              "alt_text": {
                "type": "string",
                "description": "Generated alt text for the image"
              },
              "confidence": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Confidence score for the generated alt text"
              }
            },
            "required": ["alt_text"]
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": ["message"]
          },
          "error": {
            "type": "null"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "result", "status", "error", "timestamp"],
        "title": "AI Alt Text Response",
        "description": "Response containing generated alt text for an image"
      },
      "AiSocialRequestSchema": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "minLength": 1
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["bluesky", "mastodon", "threads", "x"]
            },
            "minItems": 1,
            "maxItems": 10
          },
          "markdown": {
            "type": "boolean",
            "default": false
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sentence_boundary",
                "word_boundary",
                "paragraph_preserve",
                "thread_optimize",
                "hashtag_preserve"
              ]
            },
            "maxItems": 10,
            "default": ["sentence_boundary", "thread_optimize"]
          }
        },
        "required": ["input", "networks"],
        "title": "AI Social Request",
        "description": "Request to split text into social media posts"
      },
      "AiSocialResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "result": {
            "type": "object",
            "properties": {
              "networks": {
                "type": "object",
                "properties": {
                  "bluesky": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 100,
                    "description": "Array of posts for this network"
                  },
                  "mastodon": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 100,
                    "description": "Array of posts for this network"
                  },
                  "threads": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 100,
                    "description": "Array of posts for this network"
                  },
                  "x": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 100,
                    "description": "Array of posts for this network"
                  }
                }
              }
            },
            "required": ["networks"]
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": ["message"]
          },
          "error": {
            "type": "null"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "result", "status", "error", "timestamp"],
        "title": "AI Social Response",
        "description": "Response containing split text for each social network"
      },
      "AiWordRequestSchema": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["single"]
              },
              "word": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            "required": ["mode", "word"]
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["context"]
              },
              "text": {
                "type": "string",
                "minLength": 1,
                "maxLength": 5000
              },
              "target_word": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            "required": ["mode", "text", "target_word"]
          }
        ],
        "title": "AI Word Request",
        "description": "Request to find alternative words"
      },
      "AiWordResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "result": {
            "type": "object",
            "properties": {
              "suggestions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "word": {
                      "type": "string",
                      "description": "Suggested alternative word"
                    },
                    "confidence": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Confidence score for this suggestion"
                    }
                  },
                  "required": ["word"]
                },
                "minItems": 5,
                "maxItems": 10,
                "description": "Array of word suggestions ordered by likelihood"
              }
            },
            "required": ["suggestions"]
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": ["message"]
          },
          "error": {
            "type": "null"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "result", "status", "error", "timestamp"],
        "title": "AI Word Response",
        "description": "Response containing alternative word suggestions"
      },
      "AiWordSuggestionSchema": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "description": "Suggested alternative word"
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Confidence score for this suggestion"
          }
        },
        "required": ["word"]
      },
      "ApiErrorResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": ["message"]
          },
          "details": {
            "type": "object"
          },
          "meta": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "error", "message", "status", "timestamp"]
      },
      "ApiSuccessResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "result": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "null"
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": ["message"]
          },
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "page": {
                "type": "number"
              },
              "per_page": {
                "type": "number"
              },
              "total_pages": {
                "type": "number"
              },
              "request_id": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "message", "error", "status", "timestamp"]
      },
      "AuthIntrospectionSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "valid": {
                "type": "boolean"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "sub": {
                    "type": "string"
                  },
                  "iat": {
                    "type": "number"
                  },
                  "exp": {
                    "type": "number"
                  },
                  "jti": {
                    "type": "string"
                  }
                },
                "required": ["sub", "iat"]
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "issuedAt": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": ["string", "null"]
                  },
                  "tokenId": {
                    "type": "string"
                  }
                },
                "required": ["id", "issuedAt", "expiresAt"]
              },
              "error": {
                "type": "string"
              }
            },
            "required": ["valid"]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "data", "timestamp"]
      },
      "AuthSuccessResponseSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "message": {
            "type": "string"
          },
          "jwt": {
            "type": "object",
            "properties": {
              "sub": {
                "type": "string"
              },
              "iat": {
                "type": "number"
              },
              "exp": {
                "type": "number"
              },
              "jti": {
                "type": "string"
              }
            },
            "required": ["sub", "iat"]
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "issuedAt": {
                "type": "string"
              },
              "expiresAt": {
                "type": ["string", "null"]
              },
              "tokenId": {
                "type": "string"
              }
            },
            "required": ["id", "issuedAt", "expiresAt"]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "message", "jwt", "user", "timestamp"]
      },
      "CreateRedirectSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[\\w-]+$"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["slug", "url"]
      },
      "EnhancedPingResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "cloudflare": {
                "type": "object",
                "properties": {
                  "connectingIP": {
                    "type": "string"
                  },
                  "country": {
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string"
                      },
                      "primary": {
                        "type": "string"
                      }
                    },
                    "required": ["ip", "primary"]
                  },
                  "datacentre": {
                    "type": "string"
                  },
                  "ray": {
                    "type": "string"
                  },
                  "request": {
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "proto": {
                        "type": "object",
                        "properties": {
                          "forward": {
                            "type": "string"
                          },
                          "request": {
                            "type": "string"
                          }
                        },
                        "required": ["forward", "request"]
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": ["agent", "host", "method", "path", "proto", "version"]
                  }
                },
                "required": ["connectingIP", "country", "datacentre", "ray", "request"]
              },
              "worker": {
                "type": "object",
                "properties": {
                  "edge_functions": {
                    "type": "boolean"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "limits": {
                    "type": "object",
                    "properties": {
                      "cpu_time": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      },
                      "request_timeout": {
                        "type": "string"
                      }
                    },
                    "required": ["cpu_time", "memory", "request_timeout"]
                  },
                  "preset": {
                    "type": "string"
                  },
                  "runtime": {
                    "type": "string"
                  },
                  "server_side_rendering": {
                    "type": "boolean"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "edge_functions",
                  "environment",
                  "limits",
                  "preset",
                  "runtime",
                  "server_side_rendering",
                  "version"
                ]
              }
            },
            "required": ["cloudflare", "worker"]
          },
          "auth": {
            "type": "object",
            "properties": {
              "supplied": {
                "type": "boolean"
              },
              "token": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "valid": {
                    "type": "boolean"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "string"
                      },
                      "tokenId": {
                        "type": ["string", "null"]
                      },
                      "issuedAt": {
                        "type": "string"
                      },
                      "expiresAt": {
                        "type": ["string", "null"]
                      }
                    },
                    "required": ["subject", "tokenId", "issuedAt", "expiresAt"]
                  }
                },
                "required": ["value", "valid"]
              }
            },
            "required": ["supplied"]
          },
          "headers": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "cloudflare": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "forwarding": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "other": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": ["count", "cloudflare", "forwarding", "other"]
          },
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["data", "auth", "headers", "ok", "timestamp"]
      },
      "HealthCheckSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ok", "error"]
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "runtime": {
            "type": "string"
          },
          "cf_ray": {
            "type": "string"
          },
          "cf_datacenter": {
            "type": "string"
          }
        },
        "required": ["status", "timestamp", "version", "environment"]
      },
      "JWTDetailsSchema": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "iat": {
            "type": "number"
          },
          "exp": {
            "type": "number"
          },
          "jti": {
            "type": "string"
          }
        },
        "required": ["sub", "iat"]
      },
      "JWTPayloadSchema": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "iat": {
            "type": "number"
          },
          "exp": {
            "type": "number"
          },
          "jti": {
            "type": "string"
          }
        },
        "required": ["sub", "iat"]
      },
      "KVDataSchema": {
        "type": "object",
        "properties": {
          "redirect": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": ["redirect"]
      },
      "KVRedirectMappingSchema": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "PingResponseSchema": {
        "type": "object",
        "properties": {
          "cloudflare": {
            "type": "object",
            "properties": {
              "connectingIP": {
                "type": "string"
              },
              "country": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string"
                  },
                  "primary": {
                    "type": "string"
                  }
                },
                "required": ["ip", "primary"]
              },
              "datacentre": {
                "type": "string"
              },
              "ray": {
                "type": "string"
              },
              "request": {
                "type": "object",
                "properties": {
                  "agent": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "proto": {
                    "type": "object",
                    "properties": {
                      "forward": {
                        "type": "string"
                      },
                      "request": {
                        "type": "string"
                      }
                    },
                    "required": ["forward", "request"]
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": ["agent", "host", "method", "path", "proto", "version"]
              }
            },
            "required": ["connectingIP", "country", "datacentre", "ray", "request"]
          },
          "worker": {
            "type": "object",
            "properties": {
              "edge_functions": {
                "type": "boolean"
              },
              "environment": {
                "type": "string"
              },
              "limits": {
                "type": "object",
                "properties": {
                  "cpu_time": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "string"
                  },
                  "request_timeout": {
                    "type": "string"
                  }
                },
                "required": ["cpu_time", "memory", "request_timeout"]
              },
              "preset": {
                "type": "string"
              },
              "runtime": {
                "type": "string"
              },
              "server_side_rendering": {
                "type": "boolean"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "edge_functions",
              "environment",
              "limits",
              "preset",
              "runtime",
              "server_side_rendering",
              "version"
            ]
          }
        },
        "required": ["cloudflare", "worker"]
      },
      "RedirectsResponseSchema": {
        "type": "object",
        "properties": {
          "redirects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 100,
            "description": "Array of available redirect slugs (truncated to 100 if more exist)"
          }
        },
        "required": ["redirects"]
      },
      "TokenMetricsSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "data": {
            "type": "object",
            "properties": {
              "total_requests": {
                "type": "number"
              },
              "successful_requests": {
                "type": "number"
              },
              "failed_requests": {
                "type": "number"
              },
              "redirect_clicks": {
                "type": "number"
              },
              "kv_timings_ms": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                }
              }
            },
            "required": ["total_requests", "successful_requests", "failed_requests", "redirect_clicks"]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["ok", "data", "timestamp"]
      },
      "TokenUsageSchema": {
        "type": "object",
        "properties": {
          "token_id": {
            "type": "string"
          },
          "usage_count": {
            "type": "number"
          },
          "max_requests": {
            "type": ["number", "null"]
          },
          "created_at": {
            "type": "string"
          },
          "last_used": {
            "type": "string"
          }
        },
        "required": ["token_id", "usage_count", "created_at"]
      },
      "UrlRedirectSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[\\w-]+$"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "clicks": {
            "type": "number",
            "default": 0
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": ["slug", "url", "created_at"]
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "issuedAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": ["string", "null"]
          },
          "tokenId": {
            "type": "string"
          }
        },
        "required": ["id", "issuedAt", "expiresAt"]
      },
      "WorkerInfoSchema": {
        "type": "object",
        "properties": {
          "runtime": {
            "type": "string"
          },
          "preset": {
            "type": "string"
          },
          "api_available": {
            "type": "boolean"
          },
          "server_side_rendering": {
            "type": "boolean"
          },
          "edge_functions": {
            "type": "boolean"
          },
          "cf_ray": {
            "type": "string"
          },
          "cf_ipcountry": {
            "type": "string"
          },
          "cf_connecting_ip": {
            "type": "string"
          },
          "worker_limits": {
            "type": "object",
            "properties": {
              "cpu_time": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "request_timeout": {
                "type": "string"
              }
            },
            "required": ["cpu_time", "memory", "request_timeout"]
          }
        },
        "required": [
          "runtime",
          "preset",
          "api_available",
          "server_side_rendering",
          "edge_functions",
          "cf_ray",
          "cf_ipcountry",
          "cf_connecting_ip",
          "worker_limits"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/token/{uuid}": {
      "get": {
        "tags": ["Token"],
        "summary": "Get uuid",
        "description": "Token management operations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "UUID identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/token/{uuid}/{path}": {
      "get": {
        "tags": ["Token"],
        "summary": "Get path",
        "description": "Token management operations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "UUID identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "description": "path parameter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/token/{uuid}/usage": {
      "get": {
        "tags": ["Token"],
        "summary": "Get usage",
        "description": "Token management operations",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "UUID identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/token/{uuid}/revoke": {
      "post": {
        "tags": ["Token"],
        "summary": "Create/Update revoke",
        "description": "Token management operations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "UUID identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/redirects": {
      "get": {
        "tags": ["System"],
        "summary": "Get redirects",
        "description": "GET operation for /api/redirects",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirects": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 100,
                      "description": "Array of available redirect slugs (truncated to 100 if more exist)"
                    }
                  },
                  "required": ["redirects"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/docs": {
      "get": {
        "tags": ["Documentation"],
        "summary": "Get docs",
        "description": "API documentation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/{name}": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get name",
        "description": "Dashboard data operations",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Name identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/ping": {
      "get": {
        "tags": ["System"],
        "summary": "Get ping",
        "description": "System health and information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cloudflare": {
                      "type": "object",
                      "properties": {
                        "connectingIP": {
                          "type": "string"
                        },
                        "country": {
                          "type": "object",
                          "properties": {
                            "ip": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "string"
                            }
                          },
                          "required": ["ip", "primary"]
                        },
                        "datacentre": {
                          "type": "string"
                        },
                        "ray": {
                          "type": "string"
                        },
                        "request": {
                          "type": "object",
                          "properties": {
                            "agent": {
                              "type": "string"
                            },
                            "host": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "proto": {
                              "type": "object",
                              "properties": {
                                "forward": {
                                  "type": "string"
                                },
                                "request": {
                                  "type": "string"
                                }
                              },
                              "required": ["forward", "request"]
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": ["agent", "host", "method", "path", "proto", "version"]
                        }
                      },
                      "required": ["connectingIP", "country", "datacentre", "ray", "request"]
                    },
                    "worker": {
                      "type": "object",
                      "properties": {
                        "edge_functions": {
                          "type": "boolean"
                        },
                        "environment": {
                          "type": "string"
                        },
                        "limits": {
                          "type": "object",
                          "properties": {
                            "cpu_time": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "string"
                            },
                            "request_timeout": {
                              "type": "string"
                            }
                          },
                          "required": ["cpu_time", "memory", "request_timeout"]
                        },
                        "preset": {
                          "type": "string"
                        },
                        "runtime": {
                          "type": "string"
                        },
                        "server_side_rendering": {
                          "type": "boolean"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "edge_functions",
                        "environment",
                        "limits",
                        "preset",
                        "runtime",
                        "server_side_rendering",
                        "version"
                      ]
                    }
                  },
                  "required": ["cloudflare", "worker"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/alt": {
      "post": {
        "tags": ["AI"],
        "summary": "Create/Update alt",
        "description": "Generate descriptive alt-text for images using AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["AI"],
        "summary": "Get alt",
        "description": "Generate descriptive alt-text for images using AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/word": {
      "post": {
        "tags": ["AI"],
        "summary": "Create/Update word",
        "description": "POST operation for /api/ai/word",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "options": [{}, {}]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/social": {
      "post": {
        "tags": ["AI"],
        "summary": "Create/Update social",
        "description": "POST operation for /api/ai/social",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/go/{slug}": {
      "get": {
        "tags": ["Redirects"],
        "summary": "Get slug",
        "description": "URL redirection service",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "URL slug",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9\\-_]+$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "result": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "null"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "message", "error", "status", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": ["object", "null"],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["message"]
                    },
                    "details": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error", "message", "status", "timestamp"]
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {}
}
