{
  // JSON Schema for validation and IntelliSense
  "$schema": "node_modules/wrangler/config-schema.json",

  // ===============================
  // REQUIRED CONFIGURATION
  // ===============================

  // Worker name - alphanumeric characters and dashes only (no underscores)
  "name": "dave-io",

  // The path to the entrypoint of your Worker that will be executed
  // Set by the build process
  // "main": "./dist/index.js",

  // Compatibility date - determines which version of the Workers runtime is used
  "compatibility_date": "2025-07-19",

  // ===============================
  // RUNTIME CONFIGURATION
  // ===============================

  // List of flags that enable features from upcoming versions of the Workers runtime
  "compatibility_flags": [
    "nodejs_compat", // Enable Node.js compatibility
    "nodejs_compat_populate_process_env" // Populate process.env
  ],

  // Account ID associated with your zone (can also be set via CLOUDFLARE_ACCOUNT_ID env var)
  "account_id": "def50674a738cee409235f71819973cf",

  // Enable usage of *.workers.dev subdomain to deploy your Worker
  "workers_dev": false,

  // Enable Preview URLs to test your Worker
  "preview_urls": true,

  // Whether Wrangler should keep variables configured in the dashboard on deploy
  "keep_vars": false,

  // Whether Wrangler should send usage data to Cloudflare for this project
  "send_metrics": true,

  // ===============================
  // ROUTING CONFIGURATION
  // ===============================

  // Routes that your Worker should be deployed to
  "routes": [
    {
      "pattern": "dave.io",
      "custom_domain": true // Use Custom Domain (no DNS changes required)
    }
  ],

  // ===============================
  // OBSERVABILITY & MONITORING
  // ===============================

  // Automatic observability settings for telemetry data emitted from your Worker
  "observability": {
    "enabled": true, // Persist logs for the Worker
    "head_sampling_rate": 1.0 // Sample rate: 0.0 = 0%, 1.0 = 100%
  },

  // Enable Workers Trace Events Logpush (automatically picked up by Logpush job)
  "logpush": false,

  // Upload source maps for better error debugging
  "upload_source_maps": true,

  // ===============================
  // PLACEMENT & PERFORMANCE
  // ===============================

  // Worker placement configuration
  "placement": {
    "mode": "smart" // Cloudflare automatically places Workers optimally
  },

  // Runtime limits (only enforced in production, not local development)
  "limits": {
    // Maximum CPU time allowed per invocation in milliseconds (max: 300,000ms = 5 minutes)
    "cpu_ms": 30000
  },

  // ===============================
  // BUILD CONFIGURATION
  // ===============================

  // Skip internal build steps and directly deploy your Worker script
  "no_bundle": false,

  // Minify the Worker script before uploading
  "minify": true,

  // Whether esbuild should apply keepNames logic to preserve function names
  "keep_names": true,

  // Preserve file names of additional modules (instead of content hash prefixes)
  "preserve_file_names": false,

  // If true, Wrangler will traverse the file tree below base_dir for additional modules
  "find_additional_modules": false,

  // Module loading rules for additional files
  // "rules": [
  //   // Example: Include WASM files as compiled WebAssembly
  //   { "type": "CompiledWasm", "globs": ["**/*.wasm"], "fallthrough": false },
  // ],

  // ===============================
  // BINDINGS & SERVICES
  // ===============================

  // Environment variables (non-encrypted, visible in dashboard)
  "vars": {
    "CLOUDFLARE_ACCOUNT_ID": "def50674a738cee409235f71819973cf",
    "NUXT_PUBLIC_API_BASE_URL": "/api"
    // Secrets (encrypted) should be managed via `wrangler secret put` command
    // or .dev.vars file for local development
  },

  // Cloudflare AI binding for machine learning models
  "ai": {
    "binding": "AI" // Available in your Worker as env.AI
  },

  // Cloudflare Images binding for image transformations
  "images": {
    "binding": "IMAGES" // Available in your Worker as env.IMAGES
  },

  // KV namespace bindings for key-value storage
  "kv_namespaces": [
    {
      "binding": "KV", // Variable name in your Worker
      "id": "e3e72ca981224309a3306e50b8226bf3"
    }
  ],

  // D1 database bindings for SQL databases
  "d1_databases": [
    {
      "binding": "D1", // Variable name in your Worker
      "database_name": "dave-io",
      "database_id": "308650a8-2263-426c-9ff8-746e743ffcb2",
      "migrations_dir": "./migrations" // Directory containing migration files
    }
  ],

  // Browser rendering bindings for headless browser automation
  "browser": {
    "binding": "BROWSER" // Variable name in your Worker
  }
}
